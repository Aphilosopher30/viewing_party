---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/76341/reviews?api_key=<DONT_SHARE_MY_TMDB_SECRET_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 20 May 2021 05:11:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - 9fb236d4b237d15ca8711b6107f81665dc26c2bd
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '16466'
      Last-Modified:
      - '2021-04-18 14:13:19 +0000'
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 4b2d2d4c49521bf403522140b78283a1.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - EDy4y7o4YHa-dwRevT96P47X5d8avzY3_X2a0DKaYW07cVdtbi6zVQ==
      Age:
      - '5715'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 20 May 2021 06:46:55 GMT
recorded_with: VCR 6.0.0
