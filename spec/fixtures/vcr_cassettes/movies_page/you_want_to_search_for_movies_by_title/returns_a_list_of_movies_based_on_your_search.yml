---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_TMDB_SECRET_KEY>&query=Avengers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 17 May 2021 23:30:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c4b0ff6aa9368016c7d27f7d12c7e5e2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW55-C3
      X-Amz-Cf-Id:
      - TUxtk0hniSJuEZC_o4kWGac42bwmACfZGsThl0zpj5iZDj4TdtWulw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 17 May 2021 23:30:28 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_TMDB_SECRET_KEY>&page=2&query=Avengers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 17 May 2021 23:30:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 964f3470ebda3eb95d91a8262c246ab6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW55-C3
      X-Amz-Cf-Id:
      - cvu3XMaocErYx9mUXoej9KywNSkaOm3utkjwG1DtYQ1O-BYtUoPehA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 17 May 2021 23:30:29 GMT
recorded_with: VCR 6.0.0
